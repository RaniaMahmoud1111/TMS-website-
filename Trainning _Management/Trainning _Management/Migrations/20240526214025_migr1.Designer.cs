// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trainning__Management.Data;

#nullable disable

namespace Trainning__Management.Migrations
{
    [DbContext(typeof(T_MDbContext))]
    [Migration("20240526214025_migr1")]
    partial class migr1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Trainning__Management.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConfPassword = "$2a$11$jJPyHC7hWwk.hqFVz30uletRr9.pElF6kL5qTaSFs7XeUEBWWFnKu",
                            Email = "admin1@.com",
                            ImageUrl = "defult.png",
                            Level = "Graduate",
                            Password = "$2a$11$jJPyHC7hWwk.hqFVz30uletRr9.pElF6kL5qTaSFs7XeUEBWWFnKu",
                            Phone = "1234567890",
                            Username = "RaniaMM"
                        },
                        new
                        {
                            Id = 2,
                            ConfPassword = "$2a$11$Bxk/Zg1RXKk6v9FW5uIg8.orbb24PTPZz.wmhXLfdz3BLPZ2nZjta",
                            Email = "admin2@.com",
                            ImageUrl = "defult.png",
                            Level = "Graduate",
                            Password = "$2a$11$Bxk/Zg1RXKk6v9FW5uIg8.orbb24PTPZz.wmhXLfdz3BLPZ2nZjta",
                            Phone = "0987654321",
                            Username = "MarwaMM"
                        },
                        new
                        {
                            Id = 3,
                            ConfPassword = "$2a$11$m/oa12zxglNQR7izScWUFuN8Catg2MMrw8TF4BurPP408eG92Tj8.",
                            Email = "admin3@.com",
                            ImageUrl = "defult.png",
                            Level = "Graduate",
                            Password = "$2a$11$m/oa12zxglNQR7izScWUFuN8Catg2MMrw8TF4BurPP408eG92Tj8.",
                            Phone = "1122334455",
                            Username = "ManarMM"
                        });
                });

            modelBuilder.Entity("Trainning__Management.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skills")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("instructors");
                });

            modelBuilder.Entity("Trainning__Management.Models.Materials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("file_path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tr_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("tr_id");

                    b.ToTable("materials");
                });

            modelBuilder.Entity("Trainning__Management.Models.Tasks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DeadLine")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tr_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("tr_id");

                    b.ToTable("tasks");
                });

            modelBuilder.Entity("Trainning__Management.Models.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GPA")
                        .HasColumnType("float");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("trainees");
                });

            modelBuilder.Entity("Trainning__Management.Models.Training", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("In_id")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("period")
                        .HasColumnType("int");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("In_id");

                    b.ToTable("training");
                });

            modelBuilder.Entity("Trainning__Management.Models.attend", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Train_id")
                        .HasColumnType("int");

                    b.Property<int>("Traine_id")
                        .HasColumnType("int");

                    b.Property<string>("att_day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Train_id");

                    b.HasIndex("Traine_id");

                    b.ToTable("attends");
                });

            modelBuilder.Entity("Trainning__Management.Models.Materials", b =>
                {
                    b.HasOne("Trainning__Management.Models.Training", "Training")
                        .WithMany("materials")
                        .HasForeignKey("tr_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Training");
                });

            modelBuilder.Entity("Trainning__Management.Models.Tasks", b =>
                {
                    b.HasOne("Trainning__Management.Models.Training", "Training")
                        .WithMany("tasks")
                        .HasForeignKey("tr_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Training");
                });

            modelBuilder.Entity("Trainning__Management.Models.Training", b =>
                {
                    b.HasOne("Trainning__Management.Models.Instructor", "Instructor")
                        .WithMany("training")
                        .HasForeignKey("In_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Trainning__Management.Models.attend", b =>
                {
                    b.HasOne("Trainning__Management.Models.Training", "Training")
                        .WithMany()
                        .HasForeignKey("Train_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trainning__Management.Models.Trainee", "Trainee")
                        .WithMany()
                        .HasForeignKey("Traine_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainee");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("Trainning__Management.Models.Instructor", b =>
                {
                    b.Navigation("training");
                });

            modelBuilder.Entity("Trainning__Management.Models.Training", b =>
                {
                    b.Navigation("materials");

                    b.Navigation("tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
